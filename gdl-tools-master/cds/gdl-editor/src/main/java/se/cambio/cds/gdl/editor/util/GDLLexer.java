/* The following code was generated by JFlex 1.4.3 on 2013-08-14 11:16 */

/*
 * Copyright 2008 Ayman Al-Sairafi ayman.alsairafi@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License
 *       at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package se.cambio.cds.gdl.editor.util;


import jsyntaxpane.Token;
import jsyntaxpane.TokenType;
import jsyntaxpane.lexers.DefaultJFlexLexer;

import java.io.UnsupportedEncodingException;


/**
 * This class is a scanner generated by
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 2013-08-14 11:16 from the specification file
 * <tt>gdl.flex</tt>
 */
public final class GDLLexer extends DefaultJFlexLexer {

    /**
     * This character denotes the end of file
     */
    public static final int YYEOF = -1;

    /**
     * initial size of the lookahead buffer
     */
    private static final int ZZ_BUFFERSIZE = 16384;

    /**
     * lexical states
     */
    public static final int STRING = 2;
    public static final int JDOC_TAG = 8;
    public static final int JDOC = 6;
    public static final int YYINITIAL = 0;
    public static final int CHARLITERAL = 4;

    /**
     * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
     * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
     * at the beginning of a line
     * l is of the form l = 2*k, k a non negative integer
     */
    private static final int ZZ_LEXSTATE[] = {
            0, 0, 1, 1, 2, 2, 3, 3, 4, 4
    };

    /**
     * Translates characters to character classes
     */
    private static final String ZZ_CMAP_PACKED =
            "\11\7\1\3\1\2\1\0\1\3\1\1\16\7\4\0\1\3\1\107" +
                    "\1\24\1\0\1\6\1\107\1\111\1\25\1\77\1\100\1\5\1\113" +
                    "\1\105\1\23\1\21\1\4\1\10\1\16\2\15\4\17\2\11\1\110" +
                    "\1\105\1\101\1\106\1\102\1\105\1\114\1\57\1\14\1\66\1\67" +
                    "\1\22\1\20\1\61\1\74\1\70\2\115\1\12\1\73\1\60\1\65" +
                    "\1\71\1\115\1\63\1\64\1\72\1\62\1\115\1\76\1\13\1\75" +
                    "\1\115\1\103\1\26\1\104\1\107\1\40\1\0\1\46\1\55\1\44" +
                    "\1\27\1\30\1\31\1\36\1\51\1\32\1\115\1\52\1\37\1\54" +
                    "\1\33\1\35\1\45\1\115\1\42\1\43\1\34\1\47\1\41\1\53" +
                    "\1\56\1\50\1\115\1\0\1\112\1\0\1\105\41\7\2\0\4\6" +
                    "\4\0\1\115\2\0\1\7\7\0\1\115\4\0\1\115\5\0\27\115" +
                    "\1\0\37\115\1\0\u01ca\115\4\0\14\115\16\0\5\115\7\0\1\115" +
                    "\1\0\1\115\21\0\160\7\5\115\1\0\2\115\2\0\4\115\10\0" +
                    "\1\115\1\0\3\115\1\0\1\115\1\0\24\115\1\0\123\115\1\0" +
                    "\213\115\1\0\5\7\2\0\236\115\11\0\46\115\2\0\1\115\7\0" +
                    "\47\115\11\0\55\7\1\0\1\7\1\0\2\7\1\0\2\7\1\0" +
                    "\1\7\10\0\33\115\5\0\3\115\15\0\4\7\7\0\1\6\4\0" +
                    "\13\7\5\0\53\115\37\7\4\0\2\115\1\7\143\115\1\0\1\115" +
                    "\10\7\1\0\6\7\2\115\2\7\1\0\4\7\2\115\12\7\3\115" +
                    "\2\0\1\115\17\0\1\7\1\115\1\7\36\115\33\7\2\0\131\115" +
                    "\13\7\1\115\16\0\12\7\41\115\11\7\2\115\4\0\1\115\5\0" +
                    "\26\115\4\7\1\115\11\7\1\115\3\7\1\115\5\7\22\0\31\115" +
                    "\3\7\244\0\4\7\66\115\3\7\1\115\22\7\1\115\7\7\12\115" +
                    "\2\7\2\0\12\7\1\0\7\115\1\0\7\115\1\0\3\7\1\0" +
                    "\10\115\2\0\2\115\2\0\26\115\1\0\7\115\1\0\1\115\3\0" +
                    "\4\115\2\0\1\7\1\115\7\7\2\0\2\7\2\0\3\7\1\115" +
                    "\10\0\1\7\4\0\2\115\1\0\3\115\2\7\2\0\12\7\2\115" +
                    "\2\6\7\0\1\6\5\0\3\7\1\0\6\115\4\0\2\115\2\0" +
                    "\26\115\1\0\7\115\1\0\2\115\1\0\2\115\1\0\2\115\2\0" +
                    "\1\7\1\0\5\7\4\0\2\7\2\0\3\7\3\0\1\7\7\0" +
                    "\4\115\1\0\1\115\7\0\14\7\3\115\1\7\13\0\3\7\1\0" +
                    "\11\115\1\0\3\115\1\0\26\115\1\0\7\115\1\0\2\115\1\0" +
                    "\5\115\2\0\1\7\1\115\10\7\1\0\3\7\1\0\3\7\2\0" +
                    "\1\115\17\0\2\115\2\7\2\0\12\7\1\0\1\6\17\0\3\7" +
                    "\1\0\10\115\2\0\2\115\2\0\26\115\1\0\7\115\1\0\2\115" +
                    "\1\0\5\115\2\0\1\7\1\115\7\7\2\0\2\7\2\0\3\7" +
                    "\10\0\2\7\4\0\2\115\1\0\3\115\2\7\2\0\12\7\1\0" +
                    "\1\115\20\0\1\7\1\115\1\0\6\115\3\0\3\115\1\0\4\115" +
                    "\3\0\2\115\1\0\1\115\1\0\2\115\3\0\2\115\3\0\3\115" +
                    "\3\0\14\115\4\0\5\7\3\0\3\7\1\0\4\7\2\0\1\115" +
                    "\6\0\1\7\16\0\12\7\11\0\1\6\7\0\3\7\1\0\10\115" +
                    "\1\0\3\115\1\0\27\115\1\0\12\115\1\0\5\115\3\0\1\115" +
                    "\7\7\1\0\3\7\1\0\4\7\7\0\2\7\1\0\2\115\6\0" +
                    "\2\115\2\7\2\0\12\7\22\0\2\7\1\0\10\115\1\0\3\115" +
                    "\1\0\27\115\1\0\12\115\1\0\5\115\2\0\1\7\1\115\7\7" +
                    "\1\0\3\7\1\0\4\7\7\0\2\7\7\0\1\115\1\0\2\115" +
                    "\2\7\2\0\12\7\1\0\2\115\17\0\2\7\1\0\10\115\1\0" +
                    "\3\115\1\0\51\115\2\0\1\115\7\7\1\0\3\7\1\0\4\7" +
                    "\1\115\10\0\1\7\10\0\2\115\2\7\2\0\12\7\12\0\6\115" +
                    "\2\0\2\7\1\0\22\115\3\0\30\115\1\0\11\115\1\0\1\115" +
                    "\2\0\7\115\3\0\1\7\4\0\6\7\1\0\1\7\1\0\10\7" +
                    "\22\0\2\7\15\0\60\115\1\7\2\115\7\7\4\0\1\6\7\115" +
                    "\10\7\1\0\12\7\47\0\2\115\1\0\1\115\2\0\2\115\1\0" +
                    "\1\115\2\0\1\115\6\0\4\115\1\0\7\115\1\0\3\115\1\0" +
                    "\1\115\1\0\1\115\2\0\2\115\1\0\4\115\1\7\2\115\6\7" +
                    "\1\0\2\7\1\115\2\0\5\115\1\0\1\115\1\0\6\7\2\0" +
                    "\12\7\2\0\2\115\42\0\1\115\27\0\2\7\6\0\12\7\13\0" +
                    "\1\7\1\0\1\7\1\0\1\7\4\0\2\7\10\115\1\0\44\115" +
                    "\4\0\24\7\1\0\2\7\5\115\13\7\1\0\44\7\11\0\1\7" +
                    "\71\0\53\115\24\7\1\115\12\7\6\0\6\115\4\7\4\115\3\7" +
                    "\1\115\3\7\2\115\7\7\3\115\4\7\15\115\14\7\1\115\17\7" +
                    "\2\0\46\115\12\0\53\115\1\0\1\115\3\0\u0149\115\1\0\4\115" +
                    "\2\0\7\115\1\0\1\115\1\0\4\115\2\0\51\115\1\0\4\115" +
                    "\2\0\41\115\1\0\4\115\2\0\7\115\1\0\1\115\1\0\4\115" +
                    "\2\0\17\115\1\0\71\115\1\0\4\115\2\0\103\115\2\0\3\7" +
                    "\40\0\20\115\20\0\125\115\14\0\u026c\115\2\0\21\115\1\0\32\115" +
                    "\5\0\113\115\3\0\3\6\17\0\15\115\1\0\4\115\3\7\13\0" +
                    "\22\115\3\7\13\0\22\115\2\7\14\0\15\115\1\0\3\115\1\0" +
                    "\2\7\14\0\64\115\40\7\3\0\1\115\3\0\1\6\1\115\1\7" +
                    "\2\0\12\7\41\0\3\7\2\0\12\7\6\0\130\115\10\0\51\115" +
                    "\1\7\1\115\5\0\106\115\12\0\35\115\3\0\14\7\4\0\14\7" +
                    "\12\0\12\7\36\115\2\0\5\115\13\0\54\115\4\0\21\7\7\115" +
                    "\2\7\6\0\12\7\46\0\27\115\5\7\4\0\65\115\12\7\1\0" +
                    "\35\7\2\0\13\7\6\0\12\7\15\0\1\115\130\0\5\7\57\115" +
                    "\21\7\7\115\4\0\12\7\21\0\11\7\14\0\3\7\36\115\12\7" +
                    "\3\0\2\115\12\7\6\0\46\115\16\7\14\0\44\115\24\7\10\0" +
                    "\12\7\3\0\3\115\12\7\44\115\122\0\3\7\1\0\25\7\4\115" +
                    "\1\7\4\115\1\7\15\0\300\115\47\7\25\0\4\7\u0116\115\2\0" +
                    "\6\115\2\0\46\115\2\0\6\115\2\0\10\115\1\0\1\115\1\0" +
                    "\1\115\1\0\1\115\1\0\37\115\2\0\65\115\1\0\7\115\1\0" +
                    "\1\115\3\0\3\115\1\0\7\115\3\0\4\115\2\0\6\115\4\0" +
                    "\15\115\5\0\3\115\1\0\7\115\16\0\5\7\32\0\5\7\20\0" +
                    "\2\6\23\0\1\6\13\0\5\7\5\0\6\7\1\0\1\115\15\0" +
                    "\1\115\20\0\15\115\3\0\32\6\26\0\15\7\4\0\1\7\3\0" +
                    "\14\7\21\0\1\115\4\0\1\115\2\0\12\115\1\0\1\115\3\0" +
                    "\5\115\6\0\1\115\1\0\1\115\1\0\1\115\1\0\4\115\1\0" +
                    "\13\115\2\0\4\115\5\0\5\115\4\0\1\115\21\0\43\6\2\115" +
                    "\4\6\u0a77\0\57\115\1\0\57\115\1\0\205\115\6\0\4\115\3\7" +
                    "\16\0\46\115\12\0\66\115\11\0\1\115\17\0\1\7\27\115\11\0" +
                    "\7\115\1\0\7\115\1\0\7\115\1\0\7\115\1\0\7\115\1\0" +
                    "\7\115\1\0\7\115\1\0\7\115\1\0\40\7\57\0\1\115\u01d5\0" +
                    "\2\115\1\6\31\0\11\6\6\7\1\0\5\115\2\0\3\6\2\115" +
                    "\4\0\126\115\2\0\2\7\2\0\3\115\1\0\132\115\1\0\4\115" +
                    "\5\0\51\115\3\0\136\115\21\0\33\115\65\0\20\115\u0200\0\u19b6\115" +
                    "\112\0\u51cc\115\64\0\u048d\115\103\0\56\115\2\0\u010d\115\3\0\20\115" +
                    "\12\7\2\115\24\0\57\115\1\7\14\0\2\7\1\0\31\115\10\0" +
                    "\106\115\12\6\2\7\45\0\11\115\2\0\147\115\2\0\4\115\1\0" +
                    "\2\115\16\0\12\115\120\0\10\115\1\7\3\115\1\7\4\115\1\7" +
                    "\27\115\5\7\20\0\1\6\7\0\64\115\14\0\2\7\62\115\21\7" +
                    "\13\0\12\7\6\0\22\7\6\115\3\0\1\115\4\0\12\7\34\115" +
                    "\10\7\2\0\27\115\15\7\14\0\35\115\3\0\4\7\57\115\16\7" +
                    "\16\0\1\115\12\7\46\0\51\115\16\7\11\0\3\115\1\7\10\115" +
                    "\2\7\2\0\12\7\6\0\27\115\3\0\1\115\1\7\4\0\60\115" +
                    "\1\7\1\115\3\7\2\115\2\7\5\115\2\7\1\115\1\7\1\115" +
                    "\30\0\3\115\43\0\6\115\2\0\6\115\2\0\6\115\11\0\7\115" +
                    "\1\0\7\115\221\0\43\115\10\7\1\0\2\7\2\0\12\7\6\0" +
                    "\u2ba4\115\14\0\27\115\4\0\61\115\u2104\0\u012e\115\2\0\76\115\2\0" +
                    "\152\115\46\0\7\115\14\0\5\115\5\0\1\115\1\7\12\115\1\0" +
                    "\15\115\1\0\5\115\1\0\1\115\1\0\2\115\1\0\2\115\1\0" +
                    "\154\115\41\0\u016b\115\22\0\100\115\2\0\66\115\50\0\14\115\1\6" +
                    "\3\0\20\7\20\0\7\7\14\0\2\6\30\0\3\6\31\0\1\6" +
                    "\6\0\5\115\1\0\207\115\2\0\1\7\4\0\1\6\13\0\12\7" +
                    "\7\0\32\115\4\0\1\6\1\0\32\115\13\0\131\115\3\0\6\115" +
                    "\2\0\6\115\2\0\6\115\2\0\3\115\3\0\2\6\3\0\2\6" +
                    "\22\0\3\7\4\0";

    /**
     * Translates characters to character classes
     */
    private static final char[] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

    /**
     * Translates DFA states to action switch labels.
     */
    private static final int[] ZZ_ACTION = zzUnpackAction();

    private static final String ZZ_ACTION_PACKED_0 =
            "\5\0\3\1\2\2\1\3\2\4\2\3\1\2\1\3" +
                    "\1\2\1\5\1\6\27\3\1\7\1\10\1\11\1\12" +
                    "\1\13\1\14\4\2\1\15\2\16\1\17\1\1\1\15" +
                    "\1\1\2\20\1\21\2\22\1\15\1\23\1\0\3\4" +
                    "\1\0\3\4\1\0\10\3\1\24\32\3\1\2\1\25" +
                    "\2\15\1\26\1\15\2\23\1\0\1\27\4\4\1\0" +
                    "\46\3\2\0\2\4\40\3\2\30\1\3\2\4\3\3" +
                    "\1\31\26\3\1\30\3\3\2\4\32\3\2\4\21\3" +
                    "\1\32\2\4\15\3\2\4\12\3\2\4\11\3\1\0" +
                    "\1\4\7\3\1\0\1\4\7\3\1\0\1\4\6\3" +
                    "\1\0\1\4\4\3\1\0\1\4\2\3\1\0\1\4" +
                    "\2\3\1\0\1\4\1\3\1\0\1\4\1\3\1\4" +
                    "\1\3\1\4\1\30\1\4\1\3\1\4\3\3";

    private static int[] zzUnpackAction() {
        int[] result = new int[377];
        int offset = 0;
        zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }


    /**
     * Translates a state to a row index in the transition table
     */
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();

    private static final String ZZ_ROWMAP_PACKED_0 =
            "\0\0\0\116\0\234\0\352\0\u0138\0\u0186\0\u01d4\0\u0222" +
                    "\0\u0270\0\u02be\0\u030c\0\u035a\0\u03a8\0\u03f6\0\u0444\0\u0492" +
                    "\0\u04e0\0\u052e\0\u0186\0\u0186\0\u057c\0\u05ca\0\u0618\0\u0666" +
                    "\0\u06b4\0\u0702\0\u0750\0\u079e\0\u07ec\0\u083a\0\u0888\0\u08d6" +
                    "\0\u0924\0\u0972\0\u09c0\0\u0a0e\0\u0a5c\0\u0aaa\0\u0af8\0\u0b46" +
                    "\0\u0b94\0\u0be2\0\u0c30\0\u0186\0\u0186\0\u0c7e\0\u0ccc\0\u0186" +
                    "\0\u0186\0\u0186\0\u0d1a\0\u0d68\0\u0db6\0\u0e04\0\u0e52\0\u0186" +
                    "\0\u0186\0\u0ea0\0\u0eee\0\u0f3c\0\u0186\0\u0f8a\0\u0186\0\u0186" +
                    "\0\u0f8a\0\u0fd8\0\u1026\0\u1074\0\u10c2\0\u1110\0\u0186\0\u115e" +
                    "\0\u11ac\0\u11fa\0\u1248\0\u1296\0\u12e4\0\u1332\0\u1380\0\u13ce" +
                    "\0\u141c\0\u146a\0\u14b8\0\u1506\0\u030c\0\u1554\0\u15a2\0\u15f0" +
                    "\0\u163e\0\u168c\0\u16da\0\u1728\0\u1776\0\u17c4\0\u1812\0\u1860" +
                    "\0\u18ae\0\u18fc\0\u194a\0\u1998\0\u19e6\0\u1a34\0\u1a82\0\u1ad0" +
                    "\0\u1b1e\0\u1b6c\0\u1bba\0\u1c08\0\u1c56\0\u1ca4\0\u1cf2\0\u1d40" +
                    "\0\u0186\0\u1d8e\0\u1ddc\0\u0186\0\u0186\0\u1e2a\0\u0186\0\u1e78" +
                    "\0\u1ec6\0\u1f14\0\u1f62\0\u1fb0\0\u1ffe\0\u204c\0\u209a\0\u20e8" +
                    "\0\u2136\0\u2184\0\u21d2\0\u2220\0\u226e\0\u22bc\0\u230a\0\u2358" +
                    "\0\u23a6\0\u23f4\0\u2442\0\u2490\0\u24de\0\u252c\0\u257a\0\u25c8" +
                    "\0\u2616\0\u2664\0\u26b2\0\u2700\0\u274e\0\u279c\0\u27ea\0\u2838" +
                    "\0\u2886\0\u28d4\0\u2922\0\u2970\0\u29be\0\u2a0c\0\u2a5a\0\u2aa8" +
                    "\0\u2af6\0\u2b44\0\u2b92\0\u2be0\0\u2c2e\0\u1ec6\0\u2c7c\0\u2cca" +
                    "\0\u2d18\0\u2d66\0\u2db4\0\u2e02\0\u2e50\0\u2e9e\0\u2eec\0\u2f3a" +
                    "\0\u2f88\0\u2fd6\0\u3024\0\u3072\0\u30c0\0\u310e\0\u315c\0\u31aa" +
                    "\0\u31f8\0\u3246\0\u3294\0\u32e2\0\u3330\0\u337e\0\u33cc\0\u341a" +
                    "\0\u3468\0\u34b6\0\u3504\0\u3552\0\u35a0\0\u35ee\0\u363c\0\u368a" +
                    "\0\u030c\0\u36d8\0\u3726\0\u3774\0\u37c2\0\u3810\0\u385e\0\u38ac" +
                    "\0\u030c\0\u38fa\0\u3948\0\u3996\0\u39e4\0\u3a32\0\u3a80\0\u3ace" +
                    "\0\u3b1c\0\u3b6a\0\u3bb8\0\u3c06\0\u3c54\0\u3ca2\0\u3cf0\0\u3d3e" +
                    "\0\u3d8c\0\u3dda\0\u3e28\0\u3e76\0\u3ec4\0\u3f12\0\u3f60\0\u3fae" +
                    "\0\u3ffc\0\u404a\0\u4098\0\u40e6\0\u4134\0\u4182\0\u41d0\0\u421e" +
                    "\0\u426c\0\u42ba\0\u4308\0\u4356\0\u43a4\0\u43f2\0\u4440\0\u448e" +
                    "\0\u44dc\0\u452a\0\u4578\0\u45c6\0\u4614\0\u4662\0\u46b0\0\u46fe" +
                    "\0\u474c\0\u479a\0\u47e8\0\u4836\0\u4884\0\u48d2\0\u4920\0\u496e" +
                    "\0\u49bc\0\u4a0a\0\u4a58\0\u4aa6\0\u4af4\0\u4b42\0\u4b90\0\u4bde" +
                    "\0\u4c2c\0\u4c7a\0\u4cc8\0\u4d16\0\u4d64\0\u4db2\0\u4e00\0\u4e4e" +
                    "\0\u4e9c\0\u4eea\0\u030c\0\u4f38\0\u4f86\0\u4fd4\0\u5022\0\u5070" +
                    "\0\u50be\0\u510c\0\u515a\0\u51a8\0\u51f6\0\u5244\0\u5292\0\u52e0" +
                    "\0\u532e\0\u537c\0\u53ca\0\u5418\0\u5466\0\u54b4\0\u5502\0\u5550" +
                    "\0\u559e\0\u55ec\0\u563a\0\u5688\0\u56d6\0\u5724\0\u5772\0\u57c0" +
                    "\0\u580e\0\u585c\0\u58aa\0\u58f8\0\u5946\0\u5994\0\u59e2\0\u5a30" +
                    "\0\u5a7e\0\u5acc\0\u5b1a\0\u5b68\0\u5bb6\0\u5c04\0\u5c52\0\u5ca0" +
                    "\0\u5cee\0\u5d3c\0\u5d8a\0\u5dd8\0\u5e26\0\u5e74\0\u5ec2\0\u5f10" +
                    "\0\u5f5e\0\u5fac\0\u5ffa\0\u6048\0\u6096\0\u60e4\0\u6132\0\u6180" +
                    "\0\u61ce\0\u621c\0\u626a\0\u62b8\0\u6306\0\u6354\0\u63a2\0\u63f0" +
                    "\0\u643e\0\u648c\0\u64da\0\u6528\0\u6576\0\u65c4\0\u6612\0\u6660" +
                    "\0\u66ae\0\u66fc\0\u674a\0\u6798\0\u67e6\0\u6834\0\u6882\0\u68d0" +
                    "\0\u691e\0\u696c\0\u69ba\0\u6a08\0\u6a56\0\u6aa4\0\u6af2\0\u6b40" +
                    "\0\u6b8e";

    private static int[] zzUnpackRowMap() {
        int[] result = new int[377];
        int offset = 0;
        zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;  /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    /**
     * The transition table of the DFA
     */
    private static final int[] ZZ_TRANS = zzUnpackTrans();

    private static final String ZZ_TRANS_PACKED_0 =
            "\1\6\1\7\1\6\1\10\1\11\1\12\1\13\1\6" +
                    "\1\14\1\15\1\16\1\13\1\17\3\15\1\13\1\20" +
                    "\1\21\1\22\1\23\1\24\1\6\1\25\1\26\1\27" +
                    "\1\30\1\31\1\32\1\33\1\34\1\35\2\13\1\36" +
                    "\1\13\1\37\1\40\1\41\1\42\2\13\1\43\1\44" +
                    "\1\45\1\46\1\13\1\47\1\13\1\50\1\13\1\51" +
                    "\6\13\1\52\3\13\1\53\1\54\1\55\1\56\1\57" +
                    "\1\60\1\61\1\62\2\12\1\62\1\63\1\64\1\65" +
                    "\1\6\1\13\1\66\1\67\1\70\21\66\1\71\1\66" +
                    "\1\72\67\66\1\73\1\67\1\70\22\73\1\71\1\74" +
                    "\67\73\5\75\1\76\106\75\1\77\1\75\5\100\1\101" +
                    "\4\100\3\102\3\100\1\102\1\100\1\102\4\100\11\102" +
                    "\1\100\36\102\16\100\1\102\120\0\1\6\116\0\1\10" +
                    "\116\0\1\103\1\104\100\0\1\62\115\0\1\62\15\0" +
                    "\13\13\1\0\1\13\4\0\50\13\16\0\1\13\10\0" +
                    "\1\105\1\106\1\107\1\110\1\0\1\111\1\112\1\111" +
                    "\1\107\1\113\1\114\4\0\1\107\1\114\1\107\5\0" +
                    "\1\107\16\0\1\110\10\0\1\107\36\0\2\15\1\107" +
                    "\2\0\3\15\1\107\1\113\1\114\4\0\1\107\1\114" +
                    "\1\107\5\0\1\107\27\0\1\107\34\0\13\13\1\0" +
                    "\1\13\4\0\30\13\1\115\17\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\41\13\1\116\6\13\16\0" +
                    "\1\13\10\0\2\113\3\0\3\113\104\0\4\13\1\117" +
                    "\6\13\1\0\1\13\4\0\34\13\1\120\13\13\16\0" +
                    "\1\13\23\0\1\62\62\0\1\62\15\0\13\13\1\0" +
                    "\1\13\4\0\1\13\1\121\4\13\1\122\41\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\10\13\1\123" +
                    "\37\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\20\13\1\124\27\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\1\125\47\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\20\13\1\126\27\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\1\13\1\127\20\13" +
                    "\1\130\25\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\4\13\1\131\1\132\5\13\1\133\34\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\1\134\47\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13" +
                    "\1\135\13\13\1\136\30\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\20\13\1\137\27\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\6\13\1\140\41\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\13\13" +
                    "\1\141\3\13\1\142\1\143\27\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\13\13\1\144\34\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\13\13\1\145" +
                    "\1\146\33\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\1\13\1\147\46\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\22\13\1\130\25\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\3\13\1\150\44\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13" +
                    "\1\151\44\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\34\13\1\152\13\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\33\13\1\153\14\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\154\4\0\33\13\1\155\14\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\156\4\0\50\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\30\13" +
                    "\1\157\17\13\16\0\1\13\101\0\1\12\4\0\1\62" +
                    "\111\0\1\160\3\0\1\62\115\0\1\62\2\0\1\62" +
                    "\112\0\1\62\3\0\1\62\111\0\1\62\4\0\1\62" +
                    "\2\0\1\66\2\0\21\66\1\0\1\66\1\0\67\66" +
                    "\2\0\1\70\113\0\2\161\1\0\5\161\1\162\4\161" +
                    "\2\162\1\163\76\161\1\73\2\0\22\73\2\0\67\73" +
                    "\2\161\1\0\113\161\4\0\1\164\123\0\3\102\3\0" +
                    "\1\102\1\0\1\102\4\0\11\102\1\0\36\102\11\0" +
                    "\1\165\4\0\1\102\1\103\1\166\1\167\113\103\5\170" +
                    "\1\171\110\170\10\0\1\105\1\106\1\107\2\0\1\111" +
                    "\1\112\1\111\1\107\1\113\1\114\4\0\1\107\1\114" +
                    "\1\107\5\0\1\107\27\0\1\107\36\0\2\106\3\0" +
                    "\3\106\1\107\1\113\1\114\4\0\1\107\1\114\1\107" +
                    "\35\0\1\107\36\0\1\172\1\173\2\0\5\173\1\0" +
                    "\1\173\4\0\3\173\12\0\1\173\1\0\1\173\6\0" +
                    "\1\173\1\0\1\173\6\0\2\173\36\0\1\174\1\106" +
                    "\1\107\2\0\3\174\1\107\1\113\1\114\4\0\1\107" +
                    "\1\114\1\107\5\0\1\107\27\0\1\107\36\0\1\111" +
                    "\1\106\1\107\2\0\3\111\1\107\1\113\1\114\4\0" +
                    "\1\107\1\114\1\107\5\0\1\107\27\0\1\107\36\0" +
                    "\2\113\3\0\3\113\1\107\1\0\1\114\4\0\1\107" +
                    "\1\114\1\107\35\0\1\107\36\0\2\175\3\0\3\175" +
                    "\3\0\1\176\67\0\1\176\10\0\13\13\1\0\1\13" +
                    "\4\0\31\13\1\177\16\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\31\13\1\200\16\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\201\4\0\50\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\34\13\1\202\13\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\2\13" +
                    "\1\203\2\13\1\204\6\13\1\205\33\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\25\13\1\206\22\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\1\13" +
                    "\1\207\46\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\4\13\1\210\43\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\10\13\1\211\37\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\13\13\1\212\11\13" +
                    "\1\213\1\13\1\214\20\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\1\13\1\215\46\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\5\13\1\216\42\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\22\13" +
                    "\1\217\25\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\3\13\1\220\44\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\10\13\1\221\37\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\2\13\1\222\45\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13" +
                    "\1\223\43\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\10\13\1\224\37\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\1\224\3\13\1\225\11\13\1\226" +
                    "\31\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\1\13\1\227\1\13\1\230\44\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\5\13\1\231\42\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\13\13\1\232" +
                    "\34\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\15\13\1\233\32\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\3\13\1\125\44\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\1\13\1\125\46\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\21\13\1\234" +
                    "\26\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\14\13\1\235\33\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\4\13\1\236\43\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\37\13\1\237\10\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\41\13\1\240" +
                    "\6\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\35\13\1\241\12\13\16\0\1\13\6\0\4\13\1\242" +
                    "\6\13\1\0\1\13\4\0\50\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\34\13\1\243\13\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\34\13\1\244" +
                    "\13\13\16\0\1\13\102\0\1\12\3\0\1\62\17\0" +
                    "\1\163\4\0\3\163\106\0\1\165\4\0\3\165\100\0" +
                    "\1\167\113\0\5\170\1\245\110\170\4\0\1\167\1\246" +
                    "\120\0\1\172\1\173\1\107\1\0\5\173\1\0\1\173" +
                    "\4\0\3\173\5\0\1\107\4\0\1\173\1\0\1\173" +
                    "\6\0\1\173\1\0\1\173\6\0\2\173\36\0\2\247" +
                    "\1\107\1\0\5\247\1\0\1\247\4\0\3\247\5\0" +
                    "\1\107\4\0\1\247\1\0\1\247\6\0\1\247\1\0" +
                    "\1\247\6\0\2\247\36\0\1\250\1\106\1\107\2\0" +
                    "\3\250\1\107\1\113\1\114\4\0\1\107\1\114\1\107" +
                    "\5\0\1\107\27\0\1\107\36\0\2\175\3\0\3\175" +
                    "\1\107\6\0\1\107\1\0\1\107\35\0\1\107\36\0" +
                    "\2\175\3\0\3\175\104\0\13\13\1\0\1\13\4\0" +
                    "\32\13\1\251\15\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\40\13\1\252\7\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\44\13\1\253\3\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\36\13\1\254" +
                    "\11\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\3\13\1\255\44\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\17\13\1\256\30\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\15\13\1\257\32\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\17\13\1\260" +
                    "\30\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\25\13\1\261\22\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\15\13\1\262\32\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\10\13\1\125\37\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\25\13\1\263" +
                    "\22\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\16\13\1\264\31\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\5\13\1\125\42\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\4\13\1\125\43\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\6\13\1\265" +
                    "\41\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\1\13\1\266\46\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\7\13\1\267\40\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\11\13\1\270\36\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\1\13\1\271" +
                    "\46\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\7\13\1\272\40\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\1\13\1\273\46\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\15\13\1\274\32\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\21\13\1\275" +
                    "\26\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\1\276\10\13\1\277\36\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\6\13\1\300\41\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\22\13\1\125\25\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\16\13" +
                    "\1\301\31\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\22\13\1\302\25\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\24\13\1\303\23\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\20\13\1\304\27\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\1\305" +
                    "\47\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\45\13\1\306\2\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\40\13\1\307\7\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\36\13\1\310\11\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\311\4\0\50\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\44\13\1\312" +
                    "\3\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\31\13\1\313\16\13\16\0\1\13\4\170\1\167\1\245" +
                    "\110\170\10\0\2\314\1\107\1\0\5\314\1\0\1\314" +
                    "\4\0\3\314\5\0\1\107\4\0\1\314\1\0\1\314" +
                    "\6\0\1\314\1\0\1\314\6\0\2\314\36\0\1\315" +
                    "\1\106\1\107\2\0\3\315\1\107\1\113\1\114\4\0" +
                    "\1\107\1\114\1\107\5\0\1\107\27\0\1\107\34\0" +
                    "\13\13\1\0\1\13\4\0\33\13\1\316\14\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\41\13\1\317" +
                    "\6\13\16\0\1\13\6\0\13\13\1\0\1\320\4\0" +
                    "\50\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\34\13\1\321\13\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\4\13\1\322\43\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\3\13\1\323\44\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\13\13\1\324" +
                    "\34\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\3\13\1\215\44\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\1\13\1\325\46\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\5\13\1\326\42\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\11\13\1\327" +
                    "\2\13\1\125\33\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\10\13\1\330\37\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\10\13\1\331\37\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\13\13\1\332" +
                    "\34\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\3\13\1\333\44\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\12\13\1\334\35\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\15\13\1\335\32\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\20\13\1\336" +
                    "\27\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\14\13\1\125\33\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\1\13\1\337\46\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\13\13\1\340\34\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\3\13\1\341" +
                    "\44\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\15\13\1\342\32\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\13\13\1\343\34\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\6\13\1\304\41\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\1\13\1\344" +
                    "\46\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\6\13\1\345\41\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\14\13\1\146\33\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\3\13\1\346\44\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\347\4\0\50\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\350\4\0\50\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\33\13\1\351" +
                    "\14\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\11\13\1\352\36\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\41\13\1\353\6\13\16\0\1\13\10\0" +
                    "\2\354\1\107\1\0\5\354\1\0\1\354\4\0\3\354" +
                    "\5\0\1\107\4\0\1\354\1\0\1\354\6\0\1\354" +
                    "\1\0\1\354\6\0\2\354\36\0\1\355\1\106\1\107" +
                    "\2\0\3\355\1\107\1\113\1\114\4\0\1\107\1\114" +
                    "\1\107\5\0\1\107\27\0\1\107\34\0\13\13\1\0" +
                    "\1\13\4\0\30\13\1\356\17\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\31\13\1\357\16\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\31\13\1\360" +
                    "\16\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\3\13\1\262\44\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\10\13\1\273\37\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\3\13\1\361\44\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\4\13\1\362" +
                    "\43\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\3\13\1\363\44\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\1\364\25\13\1\46\21\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\17\13\1\365\30\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\6\13" +
                    "\1\366\41\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\11\13\1\367\36\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\4\13\1\370\43\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\1\13\1\371\46\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\21\13" +
                    "\1\372\26\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\17\13\1\373\30\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\16\13\1\214\31\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\3\13\1\374\44\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\15\13" +
                    "\1\375\32\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\6\13\1\376\41\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\3\13\1\377\44\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\5\13\1\u0100\42\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\13\13" +
                    "\1\u0101\34\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\4\13\1\u0102\43\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\43\13\1\u0103\4\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\11\13\1\u0104\36\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\34\13" +
                    "\1\u0105\13\13\16\0\1\13\6\0\6\13\1\17\4\13" +
                    "\1\0\1\13\4\0\40\13\1\u0106\7\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\31\13\1\u0107\16\13" +
                    "\16\0\1\13\10\0\2\u0108\1\107\1\0\5\u0108\1\0" +
                    "\1\u0108\4\0\3\u0108\5\0\1\107\4\0\1\u0108\1\0" +
                    "\1\u0108\6\0\1\u0108\1\0\1\u0108\6\0\2\u0108\36\0" +
                    "\1\u0109\1\106\1\107\2\0\3\u0109\1\107\1\113\1\114" +
                    "\4\0\1\107\1\114\1\107\5\0\1\107\27\0\1\107" +
                    "\34\0\13\13\1\0\1\13\4\0\32\13\1\242\15\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\32\13" +
                    "\1\311\15\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\43\13\1\u010a\4\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\16\13\1\262\31\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\5\13\1\273\42\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\6\13" +
                    "\1\215\41\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\1\13\1\u010b\46\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\5\13\1\u010c\42\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\7\13\1\u010d\40\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\1\u010e" +
                    "\14\13\1\u010f\32\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\17\13\1\u0110\30\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\13\13\1\u0111\34\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\15\13\1\u0112" +
                    "\32\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\7\13\1\146\40\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\7\13\1\u0113\40\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\17\13\1\u0114\30\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\4\13\1\u0115" +
                    "\43\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\5\13\1\u010d\42\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\21\13\1\u0116\26\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\13\4\0\1\273\47\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\7\13\1\273\40\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\46\13" +
                    "\1\u0117\1\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\36\13\1\u0118\1\13\1\u0106\7\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\37\13\1\u0119\10\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\u011a\4\0\50\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\32\13" +
                    "\1\u011b\15\13\16\0\1\13\10\0\2\u011c\1\107\1\0" +
                    "\5\u011c\1\0\1\u011c\4\0\3\u011c\5\0\1\107\4\0" +
                    "\1\u011c\1\0\1\u011c\6\0\1\u011c\1\0\1\u011c\6\0" +
                    "\2\u011c\36\0\1\u011d\1\106\1\107\2\0\3\u011d\1\107" +
                    "\1\113\1\114\4\0\1\107\1\114\1\107\5\0\1\107" +
                    "\27\0\1\107\34\0\13\13\1\0\1\13\4\0\11\13" +
                    "\1\u011e\36\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\2\13\1\u011f\45\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\1\13\1\u0120\46\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\21\13\1\125\26\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\1\13" +
                    "\1\u0121\46\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\6\13\1\u0122\41\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\10\13\1\u0123\37\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\14\13\1\326\33\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\10\13" +
                    "\1\u0124\37\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\22\13\1\214\25\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\5\13\1\224\42\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\1\u0125\47\13\16\0" +
                    "\1\13\6\0\13\13\1\0\1\13\4\0\16\13\1\u0126" +
                    "\31\13\16\0\1\13\6\0\13\13\1\0\1\13\4\0" +
                    "\42\13\1\u0127\5\13\16\0\1\13\6\0\13\13\1\0" +
                    "\1\13\4\0\31\13\1\u0128\16\13\16\0\1\13\6\0" +
                    "\13\13\1\0\1\u0129\4\0\50\13\16\0\1\13\6\0" +
                    "\12\13\1\u012a\1\0\1\13\4\0\50\13\16\0\1\13" +
                    "\10\0\2\u012b\1\107\1\0\5\u012b\1\0\1\u012b\4\0" +
                    "\3\u012b\5\0\1\107\4\0\1\u012b\1\0\1\u012b\6\0" +
                    "\1\u012b\1\0\1\u012b\6\0\2\u012b\36\0\1\u012c\1\106" +
                    "\1\107\2\0\3\u012c\1\107\1\113\1\114\4\0\1\107" +
                    "\1\114\1\107\5\0\1\107\27\0\1\107\34\0\6\13" +
                    "\1\17\4\13\1\0\1\13\4\0\50\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\3\13\1\u012d\44\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\11\13" +
                    "\1\u012e\36\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\5\13\1\204\42\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\4\13\1\u012f\43\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\11\13\1\u0130\36\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\1\13" +
                    "\1\u0131\46\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\3\13\1\u0132\44\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\1\13\1\u0133\46\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\u010a\4\0\50\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\43\13\1\u0134\4\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\11\13" +
                    "\1\u0135\36\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\41\13\1\u0136\6\13\16\0\1\13\10\0\2\u0137" +
                    "\1\107\1\0\5\u0137\1\0\1\u0137\4\0\3\u0137\5\0" +
                    "\1\107\4\0\1\u0137\1\0\1\u0137\6\0\1\u0137\1\0" +
                    "\1\u0137\6\0\2\u0137\36\0\1\u0138\1\106\1\107\2\0" +
                    "\3\u0138\1\107\1\113\1\114\4\0\1\107\1\114\1\107" +
                    "\5\0\1\107\27\0\1\107\34\0\13\13\1\0\1\13" +
                    "\4\0\4\13\1\u0125\43\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\3\13\1\30\44\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\5\13\1\u0139\42\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\10\13" +
                    "\1\u013a\6\13\1\u013b\30\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\11\13\1\u013c\36\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\5\13\1\u013d\42\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\11\13" +
                    "\1\u013e\36\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\36\13\1\u013f\11\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\40\13\1\u0140\7\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\31\13\1\u0141\16\13" +
                    "\16\0\1\13\10\0\2\u0142\1\107\1\0\5\u0142\1\0" +
                    "\1\u0142\4\0\3\u0142\5\0\1\107\4\0\1\u0142\1\0" +
                    "\1\u0142\6\0\1\u0142\1\0\1\u0142\6\0\2\u0142\36\0" +
                    "\1\u0143\1\106\1\107\2\0\3\u0143\1\107\1\113\1\114" +
                    "\4\0\1\107\1\114\1\107\5\0\1\107\27\0\1\107" +
                    "\34\0\13\13\1\0\1\13\4\0\13\13\1\u0144\34\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\17\13" +
                    "\1\136\30\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\20\13\1\u0145\27\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\14\13\1\u0146\33\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\3\13\1\u0147\44\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\3\13" +
                    "\1\30\22\13\1\46\21\13\16\0\1\13\6\0\4\13" +
                    "\1\u0148\6\13\1\0\1\13\4\0\50\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\u0149\4\0\50\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\41\13\1\u014a\6\13" +
                    "\16\0\1\13\10\0\2\u014b\1\107\1\0\5\u014b\1\0" +
                    "\1\u014b\4\0\3\u014b\5\0\1\107\4\0\1\u014b\1\0" +
                    "\1\u014b\6\0\1\u014b\1\0\1\u014b\6\0\2\u014b\36\0" +
                    "\1\u014c\1\106\1\107\2\0\3\u014c\1\107\1\113\1\114" +
                    "\4\0\1\107\1\114\1\107\5\0\1\107\27\0\1\107" +
                    "\34\0\13\13\1\0\1\13\4\0\3\13\1\u014d\44\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\5\13" +
                    "\1\u014e\42\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\5\13\1\u014f\42\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\6\13\1\u0150\41\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\36\13\1\u0151\11\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\35\13" +
                    "\1\u0152\12\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\43\13\1\u0153\4\13\16\0\1\13\10\0\2\u0154" +
                    "\1\107\1\0\5\u0154\1\0\1\u0154\4\0\3\u0154\5\0" +
                    "\1\107\4\0\1\u0154\1\0\1\u0154\6\0\1\u0154\1\0" +
                    "\1\u0154\6\0\2\u0154\36\0\1\u0155\1\106\1\107\2\0" +
                    "\3\u0155\1\107\1\113\1\114\4\0\1\107\1\114\1\107" +
                    "\5\0\1\107\27\0\1\107\34\0\13\13\1\0\1\13" +
                    "\4\0\26\13\1\u0156\21\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\22\13\1\u0157\25\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\17\13\1\u0158\30\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\4\13" +
                    "\1\273\43\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\32\13\1\u0159\15\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\37\13\1\u015a\10\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\41\13\1\u015b\6\13" +
                    "\16\0\1\13\10\0\2\u015c\1\107\1\0\5\u015c\1\0" +
                    "\1\u015c\4\0\3\u015c\5\0\1\107\4\0\1\u015c\1\0" +
                    "\1\u015c\6\0\1\u015c\1\0\1\u015c\6\0\2\u015c\36\0" +
                    "\1\u015d\1\106\1\107\2\0\3\u015d\1\107\1\113\1\114" +
                    "\4\0\1\107\1\114\1\107\5\0\1\107\27\0\1\107" +
                    "\34\0\13\13\1\0\1\13\4\0\20\13\1\u015e\27\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\6\13" +
                    "\1\u015f\41\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\5\13\1\146\42\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\46\13\1\311\1\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\34\13\1\u0160\13\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\36\13" +
                    "\1\u0161\11\13\16\0\1\13\10\0\2\u0162\1\107\1\0" +
                    "\5\u0162\1\0\1\u0162\4\0\3\u0162\5\0\1\107\4\0" +
                    "\1\u0162\1\0\1\u0162\6\0\1\u0162\1\0\1\u0162\6\0" +
                    "\2\u0162\36\0\1\u0163\1\106\1\107\2\0\3\u0163\1\107" +
                    "\1\113\1\114\4\0\1\107\1\114\1\107\5\0\1\107" +
                    "\27\0\1\107\34\0\13\13\1\0\1\13\4\0\5\13" +
                    "\1\u0164\42\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\13\13\1\125\34\13\16\0\1\13\6\0\13\13" +
                    "\1\0\1\13\4\0\41\13\1\u0165\6\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\31\13\1\311\16\13" +
                    "\16\0\1\13\10\0\2\u0166\1\107\1\0\5\u0166\1\0" +
                    "\1\u0166\4\0\3\u0166\5\0\1\107\4\0\1\u0166\1\0" +
                    "\1\u0166\6\0\1\u0166\1\0\1\u0166\6\0\2\u0166\36\0" +
                    "\1\u0167\1\106\1\107\2\0\3\u0167\1\107\1\113\1\114" +
                    "\4\0\1\107\1\114\1\107\5\0\1\107\27\0\1\107" +
                    "\34\0\13\13\1\0\1\13\4\0\6\13\1\u0168\41\13" +
                    "\16\0\1\13\6\0\13\13\1\0\1\13\4\0\42\13" +
                    "\1\u0169\5\13\16\0\1\13\10\0\2\u016a\1\107\1\0" +
                    "\5\u016a\1\0\1\u016a\4\0\3\u016a\5\0\1\107\4\0" +
                    "\1\u016a\1\0\1\u016a\6\0\1\u016a\1\0\1\u016a\6\0" +
                    "\2\u016a\36\0\1\u016b\1\106\1\107\2\0\3\u016b\1\107" +
                    "\1\113\1\114\4\0\1\107\1\114\1\107\5\0\1\107" +
                    "\27\0\1\107\34\0\13\13\1\0\1\13\4\0\13\13" +
                    "\1\273\34\13\16\0\1\13\6\0\13\13\1\0\1\13" +
                    "\4\0\43\13\1\u016c\4\13\16\0\1\13\10\0\2\u016d" +
                    "\1\107\1\0\5\u016d\1\0\1\u016d\4\0\3\u016d\5\0" +
                    "\1\107\4\0\1\u016d\1\0\1\u016d\6\0\1\u016d\1\0" +
                    "\1\u016d\6\0\2\u016d\36\0\1\u016e\1\106\1\107\2\0" +
                    "\3\u016e\1\107\1\113\1\114\4\0\1\107\1\114\1\107" +
                    "\5\0\1\107\27\0\1\107\34\0\13\13\1\0\1\13" +
                    "\4\0\41\13\1\u016f\6\13\16\0\1\13\12\0\1\107" +
                    "\24\0\1\107\66\0\1\u0170\1\106\1\107\2\0\3\u0170" +
                    "\1\107\1\113\1\114\4\0\1\107\1\114\1\107\5\0" +
                    "\1\107\27\0\1\107\34\0\13\13\1\0\1\13\4\0" +
                    "\36\13\1\u0171\11\13\16\0\1\13\10\0\1\u0172\1\106" +
                    "\1\107\2\0\3\u0172\1\107\1\113\1\114\4\0\1\107" +
                    "\1\114\1\107\5\0\1\107\27\0\1\107\34\0\13\13" +
                    "\1\0\1\13\4\0\31\13\1\u0173\16\13\16\0\1\13" +
                    "\10\0\1\u0174\1\106\1\107\2\0\3\u0174\1\107\1\113" +
                    "\1\114\4\0\1\107\1\114\1\107\5\0\1\107\27\0" +
                    "\1\107\34\0\13\13\1\0\1\13\4\0\11\13\1\u0175" +
                    "\36\13\16\0\1\13\10\0\1\u0176\1\106\1\107\2\0" +
                    "\3\u0176\1\107\1\113\1\114\4\0\1\107\1\114\1\107" +
                    "\5\0\1\107\27\0\1\107\34\0\13\13\1\0\1\13" +
                    "\4\0\41\13\1\u0177\6\13\16\0\1\13\10\0\2\106" +
                    "\1\107\2\0\3\106\1\107\1\113\1\114\4\0\1\107" +
                    "\1\114\1\107\5\0\1\107\27\0\1\107\34\0\13\13" +
                    "\1\0\1\13\4\0\43\13\1\u0178\4\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\u0179\4\0\50\13\16\0\1\13" +
                    "\6\0\13\13\1\0\1\13\4\0\44\13\1\311\3\13" +
                    "\16\0\1\13";

    private static int[] zzUnpackTrans() {
        int[] result = new int[27612];
        int offset = 0;
        zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }


    /* error codes */
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;

    /* error messages for the codes above */
    private static final String ZZ_ERROR_MSG[] = {
            "Unkown internal scanner error",
            "Error: could not match input",
            "Error: pushback value was too large"
    };

    /**
     * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
     */
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();

    private static final String ZZ_ATTRIBUTE_PACKED_0 =
            "\5\0\1\11\14\1\2\11\27\1\2\11\2\1\3\11" +
                    "\5\1\2\11\3\1\1\11\1\1\2\11\3\1\1\0" +
                    "\2\1\1\11\1\0\3\1\1\0\44\1\1\11\2\1" +
                    "\2\11\1\1\1\11\1\0\5\1\1\0\46\1\2\0" +
                    "\233\1\1\0\10\1\1\0\10\1\1\0\7\1\1\0" +
                    "\5\1\1\0\3\1\1\0\3\1\1\0\2\1\1\0" +
                    "\14\1";

    private static int[] zzUnpackAttribute() {
        int[] result = new int[377];
        int offset = 0;
        zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;       /* index in packed string  */
        int j = offset;  /* index in unpacked array */
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    /**
     * the input device
     */
    private java.io.Reader zzReader;

    /**
     * the current state of the DFA
     */
    private int zzState;

    /**
     * the current lexical state
     */
    private int zzLexicalState = YYINITIAL;

    /**
     * this buffer contains the current text to be matched and is
     * the source of the yytext() string
     */
    private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

    /**
     * the textposition at the last accepting state
     */
    private int zzMarkedPos;

    /**
     * the current text position in the buffer
     */
    private int zzCurrentPos;

    /**
     * startRead marks the beginning of the yytext() string in the buffer
     */
    private int zzStartRead;

    /**
     * endRead marks the last character in the buffer, that has been read
     * from input
     */
    private int zzEndRead;

    /**
     * number of newlines encountered up to the start of the matched text
     */
    //private int yyline;

    /**
     * the number of characters up to the start of the matched text
     */
    private int yychar;

    /**
     * the number of characters from the last newline up to the start of the
     * matched text
     */
    //private int yycolumn;

    /**
     * zzAtBOL == true <=> the scanner is currently at the beginning of a line
     */
    //private boolean zzAtBOL = true;

    /**
     * zzAtEOF == true <=> the scanner is at the EOF
     */
    private boolean zzAtEOF;

    /**
     * denotes if the user-EOF-code has already been executed
     */
    //private boolean zzEOFDone;

  /* user code: */

    /**
     * Create an empty lexer, yyrset will be called later to reset and assign
     * the reader
     */
    public GDLLexer() {
        super();
    }

    @Override
    public int yychar() {
        return yychar;
    }

    private static final byte PARAN = 1;
    private static final byte BRACKET = 2;
    private static final byte GT_BRACKET = 3;


    /**
     * Creates a new scanner
     * There is also a java.io.InputStream version of this constructor.
     *
     * @param in the java.io.Reader to read input from.
     */
    public GDLLexer(java.io.Reader in) {
        this.zzReader = in;
    }

    /**
     * Creates a new scanner.
     * There is also java.io.Reader version of this constructor.
     *
     * @param in the java.io.Inputstream to read input from.
     */
    public GDLLexer(java.io.InputStream in) throws UnsupportedEncodingException {
        this(new java.io.InputStreamReader(in, "UTF-8"));
    }

    /**
     * Unpacks the compressed character translation table.
     *
     * @param packed the packed character translation table
     * @return the unpacked character translation table
     */
    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[0x10000];
        int i = 0;  /* index in packed string  */
        int j = 0;  /* index in unpacked array */
        while (i < 2286) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do map[j++] = value; while (--count > 0);
        }
        return map;
    }


    /**
     * Refills the input buffer.
     *
     * @return <code>false</code>, iff there was new input.
     * @throws java.io.IOException if any I/O-Error occurs
     */
    private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
        if (zzStartRead > 0) {
            System.arraycopy(zzBuffer, zzStartRead,
                    zzBuffer, 0,
                    zzEndRead - zzStartRead);

      /* translate stored positions */
            zzEndRead -= zzStartRead;
            zzCurrentPos -= zzStartRead;
            zzMarkedPos -= zzStartRead;
            zzStartRead = 0;
        }

    /* is the buffer big enough? */
        if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
            char newBuffer[] = new char[zzCurrentPos * 2];
            System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
            zzBuffer = newBuffer;
        }

    /* finally: fill the buffer with new input */
        int numRead = zzReader.read(zzBuffer, zzEndRead,
                zzBuffer.length - zzEndRead);

        if (numRead > 0) {
            zzEndRead += numRead;
            return false;
        }
        // unlikely but not impossible: read 0 characters, but not at end of stream
        if (numRead == 0) {
            int c = zzReader.read();
            if (c == -1) {
                return true;
            } else {
                zzBuffer[zzEndRead++] = (char) c;
                return false;
            }
        }

        // numRead < 0
        return true;
    }


    /**
     * Closes the input stream.
     */
    public final void yyclose() throws java.io.IOException {
        zzAtEOF = true;            /* indicate end of file */
        zzEndRead = zzStartRead;  /* invalidate buffer    */

        if (zzReader != null)
            zzReader.close();
    }


    /**
     * Resets the scanner to read from a new input stream.
     * Does not close the old reader.
     * <p>
     * All internal variables are reset, the old input stream
     * <b>cannot</b> be reused (internal buffer is discarded and lost).
     * Lexical state is set to <tt>ZZ_INITIAL</tt>.
     *
     * @param reader the new input stream
     */
    public final void yyreset(java.io.Reader reader) {
        zzReader = reader;
        //zzAtBOL = true;
        zzAtEOF = false;
        //zzEOFDone = false;
        zzEndRead = zzStartRead = 0;
        zzCurrentPos = zzMarkedPos = 0;
        //yyline = yychar = yycolumn = 0;
        yychar = 0;
        zzLexicalState = YYINITIAL;
    }


    /**
     * Returns the current lexical state.
     */
    public final int yystate() {
        return zzLexicalState;
    }


    /**
     * Enters a new lexical state
     *
     * @param newState the new lexical state
     */
    public final void yybegin(int newState) {
        zzLexicalState = newState;
    }


    /**
     * Returns the text matched by the current regular expression.
     */
    public final String yytext() {
        return new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead);
    }


    /**
     * Returns the character at position <tt>pos</tt> from the
     * matched text.
     * <p>
     * It is equivalent to yytext().charAt(pos), but faster
     *
     * @param pos the position of the character to fetch.
     *            A value from 0 to yylength()-1.
     * @return the character at position pos
     */
    public final char yycharat(int pos) {
        return zzBuffer[zzStartRead + pos];
    }


    /**
     * Returns the length of the matched text region.
     */
    public final int yylength() {
        return zzMarkedPos - zzStartRead;
    }


    /**
     * Reports an error that occured while scanning.
     * <p>
     * In a wellformed scanner (no or only correct usage of
     * yypushback(int) and a match-all fallback rule) this method
     * will only be called with things that "Can't Possibly Happen".
     * If this method is called, something is seriously wrong
     * (e.g. a JFlex bug producing a faulty scanner etc.).
     * <p>
     * Usual syntax/scanner level error handling should be done
     * in error fallback rules.
     *
     * @param errorCode the code of the errormessage to display
     */
    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException ex) {
            message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
        }

        throw new Error(message);
    }


    /**
     * Pushes the specified amount of characters back into the input stream.
     * <p>
     * They will be read again by then next call of the scanning method
     *
     * @param number the number of characters to be read again.
     *               This number must not be greater than yylength()!
     */
    public void yypushback(int number) {
        if (number > yylength())
            zzScanError(ZZ_PUSHBACK_2BIG);

        zzMarkedPos -= number;
    }


    /**
     * Resumes scanning until the next regular expression is matched,
     * the end of input is encountered or an I/O-Error occurs.
     *
     * @return the next token
     * @throws java.io.IOException if any I/O-Error occurs
     */
    public Token yylex() throws java.io.IOException {
        int zzInput;
        int zzAction;

        // cached fields:
        int zzCurrentPosL;
        int zzMarkedPosL;
        int zzEndReadL = zzEndRead;
        char[] zzBufferL = zzBuffer;
        char[] zzCMapL = ZZ_CMAP;

        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;

        while (true) {
            zzMarkedPosL = zzMarkedPos;

            yychar += zzMarkedPosL - zzStartRead;

            zzAction = -1;

            zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

            zzState = ZZ_LEXSTATE[zzLexicalState];


            zzForAction:
            {
                while (true) {

                    if (zzCurrentPosL < zzEndReadL)
                        zzInput = zzBufferL[zzCurrentPosL++];
                    else if (zzAtEOF) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        // store back cached positions
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        // get translated positions and possibly new buffer
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if (eof) {
                            zzInput = YYEOF;
                            break zzForAction;
                        } else {
                            zzInput = zzBufferL[zzCurrentPosL++];
                        }
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                    if (zzNext == -1) break zzForAction;
                    zzState = zzNext;

                    int zzAttributes = zzAttrL[zzState];
                    if ((zzAttributes & 1) == 1) {
                        zzAction = zzState;
                        zzMarkedPosL = zzCurrentPosL;
                        if ((zzAttributes & 8) == 8) break zzForAction;
                    }

                }
            }

            // store back cached position
            zzMarkedPos = zzMarkedPosL;

            switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 8: {
                    return token(TokenType.OPERATOR, -PARAN);
                }
                case 27:
                    break;
                case 20: {
                    return token(TokenType.KEYWORD);
                }
                case 28:
                    break;
                case 4: {
                    return token(TokenType.NUMBER);
                }
                case 29:
                    break;
                case 18: {
                    yybegin(JDOC);
                    // length also includes the trailing quote
                    int start = tokenStart;
                    tokenStart = yychar;
                    int len = tokenLength;
                    tokenLength = 1;
                    return token(TokenType.COMMENT2, start, len);
                }
                case 30:
                    break;
                case 22: {
                    yybegin(YYINITIAL);
                    return token(TokenType.COMMENT, tokenStart, tokenLength + 2);
                }
                case 31:
                    break;
                case 2: {
                    return token(TokenType.OPERATOR);
                }
                case 32:
                    break;
                case 10: {
                    return token(TokenType.OPERATOR, -GT_BRACKET);
                }
                case 33:
                    break;
                case 17: {
                    yybegin(JDOC_TAG);
                    int start = tokenStart;
                    tokenStart = yychar;
                    int len = tokenLength;
                    tokenLength = 1;
                    return token(TokenType.COMMENT, start, len);
                }
                case 34:
                    break;
                case 13: {
                    tokenLength += yylength();
                }
                case 35:
                    break;
                case 14: {
                    yybegin(YYINITIAL);
                }
                case 36:
                    break;
                case 6: {
                    yybegin(CHARLITERAL);
                    tokenStart = yychar;
                    tokenLength = 1;
                }
                case 37:
                    break;
                case 23: {
                    yybegin(JDOC);
                    tokenStart = yychar;
                    tokenLength = 3;
                }
                case 38:
                    break;
                case 15: {
                    yybegin(YYINITIAL);
                    // length also includes the trailing quote
                    return token(TokenType.STRING, tokenStart, tokenLength + 1);
                }
                case 39:
                    break;
                case 24: {
                    return token(TokenType.TYPE);
                }
                case 40:
                    break;
                case 26: {
                    return token(TokenType.WARNING);
                }
                case 41:
                    break;
                case 12: {
                    return token(TokenType.OPERATOR, -BRACKET);
                }
                case 42:
                    break;
                case 7: {
                    return token(TokenType.OPERATOR, PARAN);
                }
                case 43:
                    break;
                case 3: {
                    return token(TokenType.IDENTIFIER);
                }
                case 44:
                    break;
                case 21: {
                    tokenLength += 2;
                }
                case 45:
                    break;
                case 25: {
                    return token(TokenType.ERROR);
                }
                case 46:
                    break;
                case 16: {
                    tokenLength++;
                }
                case 47:
                    break;
                case 11: {
                    return token(TokenType.OPERATOR, BRACKET);
                }
                case 48:
                    break;
                case 19: {
                    return token(TokenType.COMMENT);
                }
                case 49:
                    break;
                case 5: {
                    yybegin(STRING);
                    tokenStart = yychar;
                    tokenLength = 1;
                }
                case 50:
                    break;
                case 9: {
                    return token(TokenType.OPERATOR, GT_BRACKET);
                }
                case 51:
                    break;
                case 1: {
                }
                case 52:
                    break;
                default:
                    if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                        zzAtEOF = true;
                        {
                            return null;
                        }
                    } else {
                        zzScanError(ZZ_NO_MATCH);
                    }
            }
        }
    }


}
